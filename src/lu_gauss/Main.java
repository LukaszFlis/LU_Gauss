package lu_gauss;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ResourceBundle;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JSpinner;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.SwingConstants;
import javax.swing.WindowConstants;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.layout.GroupLayout;
import org.jdesktop.layout.LayoutStyle;

/**
 *
 * @author Luk
 */
public class Main extends javax.swing.JFrame {

    // Uchwyt do pól i metod klasy LU_Decomposition
    LU_Decomposition lu;
    // Uchwyt do pól i metod klasy Graf
    Graf graf;
    //handle for MP class
    MP mp;

    /**
     *
     */
    public Main() {
        this.lu = new LU_Decomposition();
        this.graf = new Graf();
        this.mp = new MP();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new JTabbedPane();
        panelWejsciowe = new JPanel();
        panelParametry = new JPanel();
        jLabel1 = new JLabel();
        spinnerN = new JSpinner();
        buttonPokaz = new JButton();
        panelMacierz = new JPanel();
        panelTabelaA = new JPanel();
        jScrollPane1 = new JScrollPane();
        tableA = new JTable();
        panelTabelaL = new JPanel();
        jScrollPane2 = new JScrollPane();
        tableL = new JTable();
        panelTabelaU = new JPanel();
        jScrollPane3 = new JScrollPane();
        tableU = new JTable();
        jLabel3 = new JLabel();
        jLabel4 = new JLabel();
        jLabel5 = new JLabel();
        jLabel2 = new JLabel();
        czas = new JLabel();
        buttonOblicz = new JButton();
        panellWeyfikacja = new JPanel();
        panelA1 = new JPanel();
        jScrollPane6 = new JScrollPane();
        tableA1 = new JTable();
        jLabel7 = new JLabel();
        jLabel6 = new JLabel();
        buttonVerification = new JButton();
        jLabel9 = new JLabel();
        labelSumEl = new JLabel();
        panelA = new JPanel();
        jScrollPane4 = new JScrollPane();
        tableABis = new JTable();
        panelA2 = new JPanel();
        jScrollPane5 = new JScrollPane();
        tableA2 = new JTable();
        panelTabelePomocnicze = new JPanel();
        jPanel3 = new JPanel();
        jScrollPane7 = new JScrollPane();
        tableFirstNest = new JTable();
        btnNests = new JButton();
        jPanel6 = new JPanel();
        btnListConnections = new JButton();
        jScrollPane8 = new JScrollPane();
        tableOfConnections = new JTable();
        panelGraf = new JPanel();
        jLabel8 = new JLabel();
        panelMP = new JPanel();
        jPanel1 = new JPanel();
        txtFs = new JTextField();
        btnSetFt = new JButton();
        btnSetFs = new JButton();
        txtFt = new JTextField();
        lblFs = new JLabel();
        lblFt = new JLabel();
        jScrollPane10 = new JScrollPane();
        tableFs = new JTable();
        jScrollPane11 = new JScrollPane();
        tableFt = new JTable();
        jPanel4 = new JPanel();
        btnGetK = new JButton();
        jScrollPane12 = new JScrollPane();
        tableW = new JTable();
        jLabel11 = new JLabel();
        jPanel5 = new JPanel();
        btnMP = new JButton();
        jLabel10 = new JLabel();
        jScrollPane9 = new JScrollPane();
        tableMP = new JTable();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        ResourceBundle bundle = ResourceBundle.getBundle("lu_gauss/Bundle"); // NOI18N
        setTitle(bundle.getString("Main.title")); // NOI18N
        setLocationByPlatform(true);
        setName("MainFrame"); // NOI18N
        setResizable(false);

        jTabbedPane1.setFont(new Font("Times New Roman", 0, 14)); // NOI18N
        jTabbedPane1.setMaximumSize(new Dimension(1024, 768));
        jTabbedPane1.setMinimumSize(new Dimension(0, 0));
        jTabbedPane1.setPreferredSize(new Dimension(1024, 768));

        panelWejsciowe.setBackground(new Color(102, 102, 255));
        panelWejsciowe.setMaximumSize(new Dimension(1024, 768));
        panelWejsciowe.setPreferredSize(new Dimension(1024, 768));
        panelWejsciowe.setRequestFocusEnabled(false);

        panelParametry.setBackground(new Color(51, 102, 255));
        panelParametry.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(0, 0, 0), 2), bundle.getString("Main.panelParametry.border.title"), TitledBorder.LEFT, TitledBorder.TOP, new Font("Times New Roman", 0, 14), new Color(255, 255, 153))); // NOI18N
        panelParametry.setPreferredSize(new Dimension(1010, 100));

        jLabel1.setFont(new Font("Times New Roman", 1, 16)); // NOI18N
        jLabel1.setText(bundle.getString("Main.jLabel1.text")); // NOI18N

        spinnerN.setModel(new SpinnerNumberModel(2, 2, 100, 1));

        buttonPokaz.setFont(new Font("Times New Roman", 1, 16)); // NOI18N
        buttonPokaz.setText(bundle.getString("Main.buttonPokaz.text")); // NOI18N
        buttonPokaz.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                buttonPokazActionPerformed(evt);
            }
        });

        GroupLayout panelParametryLayout = new GroupLayout(panelParametry);
        panelParametry.setLayout(panelParametryLayout);
        panelParametryLayout.setHorizontalGroup(panelParametryLayout.createParallelGroup(GroupLayout.LEADING)
            .add(panelParametryLayout.createSequentialGroup()
                .add(19, 19, 19)
                .add(jLabel1)
                .add(49, 49, 49)
                .add(spinnerN, GroupLayout.PREFERRED_SIZE, 54, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(buttonPokaz, GroupLayout.PREFERRED_SIZE, 73, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelParametryLayout.setVerticalGroup(panelParametryLayout.createParallelGroup(GroupLayout.LEADING)
            .add(panelParametryLayout.createSequentialGroup()
                .addContainerGap()
                .add(panelParametryLayout.createParallelGroup(GroupLayout.BASELINE)
                    .add(jLabel1, GroupLayout.PREFERRED_SIZE, 31, GroupLayout.PREFERRED_SIZE)
                    .add(spinnerN, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                    .add(buttonPokaz))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        panelMacierz.setBackground(new Color(51, 102, 255));
        panelMacierz.setBorder(BorderFactory.createTitledBorder(new LineBorder(new Color(0, 0, 0), 2, true), bundle.getString("Main.panelMacierz.border.title"), TitledBorder.LEFT, TitledBorder.TOP, new Font("Times New Roman", 1, 14), new Color(255, 0, 102))); // NOI18N
        panelMacierz.setMinimumSize(new Dimension(0, 0));
        panelMacierz.setPreferredSize(new Dimension(1010, 650));

        panelTabelaA.setBackground(new Color(255, 255, 255));
        panelTabelaA.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0), 2));
        panelTabelaA.setMinimumSize(new Dimension(326, 326));
        panelTabelaA.setPreferredSize(new Dimension(326, 326));

        jScrollPane1.setBackground(new Color(255, 255, 255));

        tableA.setAutoCreateRowSorter(true);
        tableA.setFont(new Font("Times New Roman", 0, 10)); // NOI18N
        tableA.setModel(new DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "(i,j)"
            }
        ));
        tableA.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        tableA.setFillsViewportHeight(true);
        tableA.setName("macierz A"); // NOI18N
        tableA.setRowSelectionAllowed(false);
        tableA.setShowGrid(true);
        tableA.getTableHeader().setResizingAllowed(false);
        tableA.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tableA);
        if (tableA.getColumnModel().getColumnCount() > 0) {
            tableA.getColumnModel().getColumn(0).setHeaderValue(bundle.getString("Main.macierz A.columnModel.title0")); // NOI18N
        }

        GroupLayout panelTabelaALayout = new GroupLayout(panelTabelaA);
        panelTabelaA.setLayout(panelTabelaALayout);
        panelTabelaALayout.setHorizontalGroup(panelTabelaALayout.createParallelGroup(GroupLayout.LEADING)
            .add(jScrollPane1, GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
        );
        panelTabelaALayout.setVerticalGroup(panelTabelaALayout.createParallelGroup(GroupLayout.LEADING)
            .add(GroupLayout.TRAILING, jScrollPane1, GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
        );

        panelTabelaL.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0), 2));
        panelTabelaL.setMinimumSize(new Dimension(0, 0));
        panelTabelaL.setPreferredSize(new Dimension(326, 326));

        jScrollPane2.setPreferredSize(new Dimension(320, 320));

        tableL.setAutoCreateRowSorter(true);
        tableL.setModel(new DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "(i,j)"
            }
        ));
        tableL.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        tableL.setFillsViewportHeight(true);
        tableL.setShowGrid(true);
        tableL.getTableHeader().setResizingAllowed(false);
        tableL.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tableL);
        if (tableL.getColumnModel().getColumnCount() > 0) {
            tableL.getColumnModel().getColumn(0).setHeaderValue(bundle.getString("Main.tableL.columnModel.title0")); // NOI18N
        }

        GroupLayout panelTabelaLLayout = new GroupLayout(panelTabelaL);
        panelTabelaL.setLayout(panelTabelaLLayout);
        panelTabelaLLayout.setHorizontalGroup(panelTabelaLLayout.createParallelGroup(GroupLayout.LEADING)
            .add(jScrollPane2, GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
        );
        panelTabelaLLayout.setVerticalGroup(panelTabelaLLayout.createParallelGroup(GroupLayout.LEADING)
            .add(jScrollPane2, GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
        );

        panelTabelaU.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0), 2));
        panelTabelaU.setMinimumSize(new Dimension(0, 0));
        panelTabelaU.setPreferredSize(new Dimension(326, 326));

        tableU.setAutoCreateRowSorter(true);
        tableU.setModel(new DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "(i,j)"
            }
        ));
        tableU.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        tableU.setFillsViewportHeight(true);
        tableU.setShowGrid(true);
        jScrollPane3.setViewportView(tableU);
        if (tableU.getColumnModel().getColumnCount() > 0) {
            tableU.getColumnModel().getColumn(0).setHeaderValue(bundle.getString("Main.tableU.columnModel.title0")); // NOI18N
        }

        GroupLayout panelTabelaULayout = new GroupLayout(panelTabelaU);
        panelTabelaU.setLayout(panelTabelaULayout);
        panelTabelaULayout.setHorizontalGroup(panelTabelaULayout.createParallelGroup(GroupLayout.LEADING)
            .add(jScrollPane3, GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
        );
        panelTabelaULayout.setVerticalGroup(panelTabelaULayout.createParallelGroup(GroupLayout.LEADING)
            .add(jScrollPane3, GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
        );

        jLabel3.setFont(new Font("Times New Roman", 1, 16)); // NOI18N
        jLabel3.setText(bundle.getString("Main.jLabel3.text")); // NOI18N

        jLabel4.setFont(new Font("Times New Roman", 1, 16)); // NOI18N
        jLabel4.setText(bundle.getString("Main.jLabel4.text")); // NOI18N

        jLabel5.setFont(new Font("Times New Roman", 1, 16)); // NOI18N
        jLabel5.setText(bundle.getString("Main.jLabel5.text")); // NOI18N

        jLabel2.setFont(new Font("Times New Roman", 1, 16)); // NOI18N
        jLabel2.setText(bundle.getString("Main.jLabel2.text")); // NOI18N

        czas.setText(bundle.getString("Main.czas.text")); // NOI18N

        buttonOblicz.setFont(new Font("Times New Roman", 1, 16)); // NOI18N
        buttonOblicz.setText(bundle.getString("Main.buttonOblicz.text")); // NOI18N
        buttonOblicz.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                buttonObliczActionPerformed(evt);
            }
        });

        GroupLayout panelMacierzLayout = new GroupLayout(panelMacierz);
        panelMacierz.setLayout(panelMacierzLayout);
        panelMacierzLayout.setHorizontalGroup(panelMacierzLayout.createParallelGroup(GroupLayout.LEADING)
            .add(panelMacierzLayout.createSequentialGroup()
                .add(3, 3, 3)
                .add(panelMacierzLayout.createParallelGroup(GroupLayout.TRAILING)
                    .add(panelTabelaA, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3))
                .add(8, 8, 8)
                .add(panelMacierzLayout.createParallelGroup(GroupLayout.LEADING, false)
                    .add(panelMacierzLayout.createSequentialGroup()
                        .add(jLabel2, GroupLayout.PREFERRED_SIZE, 76, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.RELATED)
                        .add(buttonOblicz, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(panelMacierzLayout.createParallelGroup(GroupLayout.TRAILING, false)
                        .add(jLabel4)
                        .add(panelTabelaL, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                .add(panelMacierzLayout.createParallelGroup(GroupLayout.LEADING)
                    .add(panelMacierzLayout.createSequentialGroup()
                        .add(8, 8, 8)
                        .add(panelMacierzLayout.createParallelGroup(GroupLayout.TRAILING)
                            .add(jLabel5)
                            .add(panelTabelaU, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                    .add(panelMacierzLayout.createSequentialGroup()
                        .addPreferredGap(LayoutStyle.UNRELATED)
                        .add(czas, GroupLayout.PREFERRED_SIZE, 322, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelMacierzLayout.setVerticalGroup(panelMacierzLayout.createParallelGroup(GroupLayout.LEADING)
            .add(panelMacierzLayout.createSequentialGroup()
                .add(panelMacierzLayout.createParallelGroup(GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(jLabel4)
                    .add(jLabel5))
                .addPreferredGap(LayoutStyle.RELATED)
                .add(panelMacierzLayout.createParallelGroup(GroupLayout.LEADING)
                    .add(panelTabelaA, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .add(panelTabelaL, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .add(panelTabelaU, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.RELATED)
                .add(panelMacierzLayout.createParallelGroup(GroupLayout.LEADING)
                    .add(czas, GroupLayout.PREFERRED_SIZE, 30, GroupLayout.PREFERRED_SIZE)
                    .add(panelMacierzLayout.createParallelGroup(GroupLayout.TRAILING, false)
                        .add(GroupLayout.LEADING, jLabel2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(GroupLayout.LEADING, buttonOblicz, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(218, Short.MAX_VALUE))
        );

        GroupLayout panelWejscioweLayout = new GroupLayout(panelWejsciowe);
        panelWejsciowe.setLayout(panelWejscioweLayout);
        panelWejscioweLayout.setHorizontalGroup(panelWejscioweLayout.createParallelGroup(GroupLayout.LEADING)
            .add(panelMacierz, GroupLayout.DEFAULT_SIZE, 1019, Short.MAX_VALUE)
            .add(panelParametry, GroupLayout.DEFAULT_SIZE, 1019, Short.MAX_VALUE)
        );
        panelWejscioweLayout.setVerticalGroup(panelWejscioweLayout.createParallelGroup(GroupLayout.LEADING)
            .add(panelWejscioweLayout.createSequentialGroup()
                .add(panelParametry, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.RELATED)
                .add(panelMacierz, GroupLayout.DEFAULT_SIZE, 631, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(bundle.getString("Main.panelWejsciowe.TabConstraints.tabTitle"), panelWejsciowe); // NOI18N

        panellWeyfikacja.setBackground(new Color(153, 153, 255));
        panellWeyfikacja.setMaximumSize(new Dimension(1024, 768));
        panellWeyfikacja.setPreferredSize(new Dimension(1024, 768));

        panelA1.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0), 2));
        panelA1.setPreferredSize(new Dimension(330, 330));

        tableA1.setAutoCreateRowSorter(true);
        tableA1.setFont(new Font("Times New Roman", 0, 10)); // NOI18N
        tableA1.setModel(new DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "(i,j)"
            }
        ));
        tableA1.setToolTipText(bundle.getString("Main.A'.toolTipText")); // NOI18N
        tableA1.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        tableA1.setFillsViewportHeight(true);
        tableA1.setName("A'"); // NOI18N
        tableA1.setShowGrid(true);
        tableA1.getTableHeader().setReorderingAllowed(false);
        jScrollPane6.setViewportView(tableA1);
        if (tableA1.getColumnModel().getColumnCount() > 0) {
            tableA1.getColumnModel().getColumn(0).setHeaderValue(bundle.getString("Main.A'.columnModel.title0_1")); // NOI18N
        }

        GroupLayout panelA1Layout = new GroupLayout(panelA1);
        panelA1.setLayout(panelA1Layout);
        panelA1Layout.setHorizontalGroup(panelA1Layout.createParallelGroup(GroupLayout.LEADING)
            .add(jScrollPane6, GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
        );
        panelA1Layout.setVerticalGroup(panelA1Layout.createParallelGroup(GroupLayout.LEADING)
            .add(jScrollPane6, GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
        );

        jLabel7.setFont(new Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setText(bundle.getString("Main.jLabel7.text")); // NOI18N

        jLabel6.setFont(new Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setText(bundle.getString("Main.jLabel6.text")); // NOI18N

        buttonVerification.setFont(new Font("Times New Roman", 0, 14)); // NOI18N
        buttonVerification.setText(bundle.getString("Main.buttonVerification.text")); // NOI18N
        buttonVerification.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                buttonVerificationActionPerformed(evt);
            }
        });

        jLabel9.setFont(new Font("Times New Roman", 0, 14)); // NOI18N
        jLabel9.setText(bundle.getString("Main.jLabel9.text")); // NOI18N

        labelSumEl.setFont(new Font("Times New Roman", 0, 14)); // NOI18N
        labelSumEl.setText(bundle.getString("Main.labelSumEl.text")); // NOI18N

        panelA.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0), 2));
        panelA.setPreferredSize(new Dimension(330, 330));

        tableABis.setAutoCreateRowSorter(true);
        tableABis.setModel(new DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "(i,j)"
            }
        ));
        tableABis.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        tableABis.setFillsViewportHeight(true);
        tableABis.setShowGrid(true);
        tableABis.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(tableABis);
        if (tableABis.getColumnModel().getColumnCount() > 0) {
            tableABis.getColumnModel().getColumn(0).setHeaderValue(bundle.getString("Main.tableABis.columnModel.title0")); // NOI18N
        }

        GroupLayout panelALayout = new GroupLayout(panelA);
        panelA.setLayout(panelALayout);
        panelALayout.setHorizontalGroup(panelALayout.createParallelGroup(GroupLayout.LEADING)
            .add(jScrollPane4, GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
        );
        panelALayout.setVerticalGroup(panelALayout.createParallelGroup(GroupLayout.LEADING)
            .add(jScrollPane4, GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
        );

        panelA2.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0), 2));
        panelA2.setPreferredSize(new Dimension(330, 330));

        tableA2.setModel(new DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "(i,j)"
            }
        ));
        tableA2.setFillsViewportHeight(true);
        tableA2.setShowGrid(true);
        tableA2.getTableHeader().setReorderingAllowed(false);
        jScrollPane5.setViewportView(tableA2);
        if (tableA2.getColumnModel().getColumnCount() > 0) {
            tableA2.getColumnModel().getColumn(0).setHeaderValue(bundle.getString("Main.tableA2.columnModel.title0")); // NOI18N
        }

        GroupLayout panelA2Layout = new GroupLayout(panelA2);
        panelA2.setLayout(panelA2Layout);
        panelA2Layout.setHorizontalGroup(panelA2Layout.createParallelGroup(GroupLayout.LEADING)
            .add(jScrollPane5, GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
        );
        panelA2Layout.setVerticalGroup(panelA2Layout.createParallelGroup(GroupLayout.LEADING)
            .add(jScrollPane5, GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
        );

        GroupLayout panellWeyfikacjaLayout = new GroupLayout(panellWeyfikacja);
        panellWeyfikacja.setLayout(panellWeyfikacjaLayout);
        panellWeyfikacjaLayout.setHorizontalGroup(panellWeyfikacjaLayout.createParallelGroup(GroupLayout.LEADING)
            .add(panellWeyfikacjaLayout.createSequentialGroup()
                .add(panellWeyfikacjaLayout.createParallelGroup(GroupLayout.LEADING)
                    .add(GroupLayout.TRAILING, panellWeyfikacjaLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel6)
                        .add(11, 11, 11))
                    .add(panellWeyfikacjaLayout.createSequentialGroup()
                        .add(10, 10, 10)
                        .add(panellWeyfikacjaLayout.createParallelGroup(GroupLayout.TRAILING)
                            .add(panelA1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .add(buttonVerification, GroupLayout.PREFERRED_SIZE, 154, GroupLayout.PREFERRED_SIZE))
                        .add(3, 3, 3)))
                .add(panellWeyfikacjaLayout.createParallelGroup(GroupLayout.LEADING)
                    .add(panelA, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .add(GroupLayout.TRAILING, panellWeyfikacjaLayout.createSequentialGroup()
                        .add(jLabel7)
                        .add(9, 9, 9)))
                .add(panellWeyfikacjaLayout.createParallelGroup(GroupLayout.LEADING)
                    .add(GroupLayout.TRAILING, panellWeyfikacjaLayout.createSequentialGroup()
                        .add(207, 207, 207)
                        .add(jLabel9, GroupLayout.PREFERRED_SIZE, 126, GroupLayout.PREFERRED_SIZE))
                    .add(panellWeyfikacjaLayout.createSequentialGroup()
                        .add(3, 3, 3)
                        .add(panellWeyfikacjaLayout.createParallelGroup(GroupLayout.LEADING)
                            .add(panellWeyfikacjaLayout.createSequentialGroup()
                                .add(10, 10, 10)
                                .add(labelSumEl, GroupLayout.PREFERRED_SIZE, 316, GroupLayout.PREFERRED_SIZE))
                            .add(panelA2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        panellWeyfikacjaLayout.setVerticalGroup(panellWeyfikacjaLayout.createParallelGroup(GroupLayout.LEADING)
            .add(panellWeyfikacjaLayout.createSequentialGroup()
                .add(24, 24, 24)
                .add(panellWeyfikacjaLayout.createParallelGroup(GroupLayout.TRAILING)
                    .add(panellWeyfikacjaLayout.createSequentialGroup()
                        .add(panellWeyfikacjaLayout.createParallelGroup(GroupLayout.BASELINE)
                            .add(jLabel7)
                            .add(jLabel6))
                        .addPreferredGap(LayoutStyle.RELATED)
                        .add(panellWeyfikacjaLayout.createParallelGroup(GroupLayout.LEADING)
                            .add(panelA1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .add(panelA, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                    .add(panellWeyfikacjaLayout.createSequentialGroup()
                        .add(jLabel9, GroupLayout.PREFERRED_SIZE, 25, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.RELATED)
                        .add(panelA2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(LayoutStyle.RELATED)
                .add(panellWeyfikacjaLayout.createParallelGroup(GroupLayout.BASELINE)
                    .add(buttonVerification)
                    .add(labelSumEl, GroupLayout.PREFERRED_SIZE, 25, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(321, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(bundle.getString("Main.panellWeyfikacja.TabConstraints.tabTitle"), panellWeyfikacja); // NOI18N

        panelTabelePomocnicze.setBackground(new Color(102, 102, 255));
        panelTabelePomocnicze.setMaximumSize(new Dimension(1024, 768));
        panelTabelePomocnicze.setPreferredSize(new Dimension(1024, 768));

        jPanel3.setBackground(new Color(51, 102, 255));
        jPanel3.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0)));
        jPanel3.setMaximumSize(new Dimension(470, 725));

        tableFirstNest.setFont(new Font("Times New Roman", 0, 10)); // NOI18N
        tableFirstNest.setModel(new DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "W1", "W2", "W3", "Il[nr]", "Ia2[nr]", "Ia1[nr]"
            }
        ));
        tableFirstNest.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        tableFirstNest.setColumnSelectionAllowed(true);
        tableFirstNest.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        tableFirstNest.setShowGrid(true);
        jScrollPane7.setViewportView(tableFirstNest);
        tableFirstNest.getColumnModel().getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        if (tableFirstNest.getColumnModel().getColumnCount() > 0) {
            tableFirstNest.getColumnModel().getColumn(0).setHeaderValue(bundle.getString("Main.tableFirstNest.columnModel.title0")); // NOI18N
            tableFirstNest.getColumnModel().getColumn(1).setHeaderValue(bundle.getString("Main.tableFirstNest.columnModel.title1_4")); // NOI18N
            tableFirstNest.getColumnModel().getColumn(2).setHeaderValue(bundle.getString("Main.tableFirstNest.columnModel.title2_4")); // NOI18N
            tableFirstNest.getColumnModel().getColumn(3).setHeaderValue(bundle.getString("Main.tableFirstNest.columnModel.title3_4")); // NOI18N
            tableFirstNest.getColumnModel().getColumn(4).setHeaderValue(bundle.getString("Main.tableFirstNest.columnModel.title4")); // NOI18N
            tableFirstNest.getColumnModel().getColumn(5).setHeaderValue(bundle.getString("Main.tableFirstNest.columnModel.title5")); // NOI18N
            tableFirstNest.getColumnModel().getColumn(6).setHeaderValue(bundle.getString("Main.tableFirstNest.columnModel.title6")); // NOI18N
        }

        btnNests.setFont(new Font("Times New Roman", 0, 14)); // NOI18N
        btnNests.setText(bundle.getString("Main.btnNests.text")); // NOI18N
        btnNests.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnNestsActionPerformed(evt);
            }
        });

        GroupLayout jPanel3Layout = new GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(26, 26, 26)
                .add(jPanel3Layout.createParallelGroup(GroupLayout.LEADING, false)
                    .add(btnNests, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jScrollPane7, GroupLayout.DEFAULT_SIZE, 417, Short.MAX_VALUE))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(btnNests)
                .addPreferredGap(LayoutStyle.RELATED, 8, Short.MAX_VALUE)
                .add(jScrollPane7, GroupLayout.PREFERRED_SIZE, 670, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel6.setBackground(new Color(51, 102, 255));
        jPanel6.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0)));
        jPanel6.setMaximumSize(new Dimension(470, 32767));
        jPanel6.setPreferredSize(new Dimension(470, 267));

        btnListConnections.setFont(new Font("Times New Roman", 0, 14)); // NOI18N
        btnListConnections.setText(bundle.getString("Main.btnListConnections.text")); // NOI18N
        btnListConnections.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnListConnectionsActionPerformed(evt);
            }
        });

        tableOfConnections.setFont(new Font("Times New Roman", 0, 10)); // NOI18N
        tableOfConnections.setModel(new DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id1", "Id2", "Direction"
            }
        ));
        tableOfConnections.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        tableOfConnections.setShowGrid(true);
        jScrollPane8.setViewportView(tableOfConnections);
        if (tableOfConnections.getColumnModel().getColumnCount() > 0) {
            tableOfConnections.getColumnModel().getColumn(0).setHeaderValue(bundle.getString("Main.tableFirstNest.columnModel.title0")); // NOI18N
            tableOfConnections.getColumnModel().getColumn(1).setHeaderValue(bundle.getString("Main.tableFirstNest.columnModel.title1_4")); // NOI18N
            tableOfConnections.getColumnModel().getColumn(2).setHeaderValue(bundle.getString("Main.tableFirstNest.columnModel.title2_4")); // NOI18N
        }

        GroupLayout jPanel6Layout = new GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(jPanel6Layout.createParallelGroup(GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .add(36, 36, 36)
                .add(jPanel6Layout.createParallelGroup(GroupLayout.LEADING, false)
                    .add(btnListConnections, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jScrollPane8, GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(jPanel6Layout.createParallelGroup(GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .add(btnListConnections)
                .addPreferredGap(LayoutStyle.UNRELATED)
                .add(jScrollPane8)
                .addContainerGap())
        );

        GroupLayout panelTabelePomocniczeLayout = new GroupLayout(panelTabelePomocnicze);
        panelTabelePomocnicze.setLayout(panelTabelePomocniczeLayout);
        panelTabelePomocniczeLayout.setHorizontalGroup(panelTabelePomocniczeLayout.createParallelGroup(GroupLayout.LEADING)
            .add(panelTabelePomocniczeLayout.createSequentialGroup()
                .add(35, 35, 35)
                .add(jPanel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.UNRELATED)
                .add(jPanel6, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .add(35, 35, 35))
        );
        panelTabelePomocniczeLayout.setVerticalGroup(panelTabelePomocniczeLayout.createParallelGroup(GroupLayout.LEADING)
            .add(panelTabelePomocniczeLayout.createSequentialGroup()
                .add(panelTabelePomocniczeLayout.createParallelGroup(GroupLayout.LEADING, false)
                    .add(jPanel3, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .add(jPanel6, GroupLayout.DEFAULT_SIZE, 727, Short.MAX_VALUE))
                .add(25, 25, 25))
        );

        jTabbedPane1.addTab(bundle.getString("Main.panelTabelePomocnicze.TabConstraints.tabTitle"), panelTabelePomocnicze); // NOI18N

        panelGraf.setBackground(new Color(153, 153, 255));
        panelGraf.setMaximumSize(new Dimension(1024, 768));
        panelGraf.setPreferredSize(new Dimension(1024, 768));

        jLabel8.setIcon(new ImageIcon(getClass().getResource("/resources/Graf_A4x4.png"))); // NOI18N
        jLabel8.setText(bundle.getString("Main.jLabel8.text")); // NOI18N
        jLabel8.setMaximumSize(new Dimension(1024, 768));
        jLabel8.setPreferredSize(new Dimension(1024, 768));

        GroupLayout panelGrafLayout = new GroupLayout(panelGraf);
        panelGraf.setLayout(panelGrafLayout);
        panelGrafLayout.setHorizontalGroup(panelGrafLayout.createParallelGroup(GroupLayout.LEADING)
            .add(GroupLayout.TRAILING, panelGrafLayout.createSequentialGroup()
                .addContainerGap(152, Short.MAX_VALUE)
                .add(jLabel8, GroupLayout.PREFERRED_SIZE, 716, GroupLayout.PREFERRED_SIZE)
                .add(151, 151, 151))
        );
        panelGrafLayout.setVerticalGroup(panelGrafLayout.createParallelGroup(GroupLayout.LEADING)
            .add(GroupLayout.TRAILING, panelGrafLayout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .add(jLabel8, GroupLayout.PREFERRED_SIZE, 673, GroupLayout.PREFERRED_SIZE)
                .add(32, 32, 32))
        );

        jTabbedPane1.addTab(bundle.getString("Main.panelGraf.TabConstraints.tabTitle"), panelGraf); // NOI18N

        panelMP.setBackground(new Color(102, 153, 255));
        panelMP.setMaximumSize(new Dimension(1024, 768));
        panelMP.setPreferredSize(new Dimension(1024, 768));

        jPanel1.setBackground(new Color(102, 102, 255));
        jPanel1.setBorder(new LineBorder(new Color(0, 0, 0), 1, true));

        txtFs.setFont(new Font("Times New Roman", 0, 14)); // NOI18N
        txtFs.setText(bundle.getString("Main.txtFs.text")); // NOI18N
        txtFs.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                txtFsMouseClicked(evt);
            }
        });

        btnSetFt.setFont(new Font("Times New Roman", 0, 14)); // NOI18N
        btnSetFt.setText(bundle.getString("Main.btnSetFt.text")); // NOI18N
        btnSetFt.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnSetFtActionPerformed(evt);
            }
        });

        btnSetFs.setFont(new Font("Times New Roman", 0, 14)); // NOI18N
        btnSetFs.setText(bundle.getString("Main.btnSetFs.text")); // NOI18N
        btnSetFs.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnSetFsActionPerformed(evt);
            }
        });

        txtFt.setFont(new Font("Times New Roman", 0, 14)); // NOI18N
        txtFt.setText(bundle.getString("Main.txtFt.text")); // NOI18N
        txtFt.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                txtFtMouseClicked(evt);
            }
        });
        txtFt.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                txtFtActionPerformed(evt);
            }
        });

        lblFs.setFont(new Font("Times New Roman", 0, 14)); // NOI18N
        lblFs.setText(bundle.getString("Main.lblFs.text")); // NOI18N

        lblFt.setFont(new Font("Times New Roman", 0, 14)); // NOI18N
        lblFt.setText(bundle.getString("Main.lblFt.text")); // NOI18N

        tableFs.setFont(new Font("Times New Roman", 0, 14)); // NOI18N
        tableFs.setModel(new DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableFs.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        tableFs.setRowSelectionAllowed(false);
        tableFs.setShowGrid(true);
        tableFs.getTableHeader().setReorderingAllowed(false);
        jScrollPane10.setViewportView(tableFs);
        if (tableFs.getColumnModel().getColumnCount() > 0) {
            tableFs.getColumnModel().getColumn(0).setResizable(false);
            tableFs.getColumnModel().getColumn(0).setHeaderValue(bundle.getString("Main.tableFs.columnModel.title0_1")); // NOI18N
            tableFs.getColumnModel().getColumn(1).setResizable(false);
            tableFs.getColumnModel().getColumn(1).setHeaderValue(bundle.getString("Main.tableFs.columnModel.title1_2")); // NOI18N
            tableFs.getColumnModel().getColumn(2).setResizable(false);
            tableFs.getColumnModel().getColumn(2).setHeaderValue(bundle.getString("Main.tableFs.columnModel.title2_2")); // NOI18N
        }

        tableFt.setFont(new Font("Times New Roman", 0, 14)); // NOI18N
        tableFt.setModel(new DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableFt.setRowSelectionAllowed(false);
        tableFt.setShowGrid(true);
        tableFt.getTableHeader().setReorderingAllowed(false);
        jScrollPane11.setViewportView(tableFt);
        if (tableFt.getColumnModel().getColumnCount() > 0) {
            tableFt.getColumnModel().getColumn(0).setResizable(false);
            tableFt.getColumnModel().getColumn(0).setHeaderValue(bundle.getString("Main.tableFs.columnModel.title0_1")); // NOI18N
            tableFt.getColumnModel().getColumn(1).setResizable(false);
            tableFt.getColumnModel().getColumn(1).setHeaderValue(bundle.getString("Main.tableFs.columnModel.title1_2")); // NOI18N
            tableFt.getColumnModel().getColumn(2).setResizable(false);
            tableFt.getColumnModel().getColumn(2).setHeaderValue(bundle.getString("Main.tableFs.columnModel.title2_2")); // NOI18N
        }

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(GroupLayout.LEADING)
                    .add(GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(txtFs, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.RELATED)
                        .add(btnSetFs))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(20, 20, 20)
                        .add(jPanel1Layout.createParallelGroup(GroupLayout.LEADING, false)
                            .add(jScrollPane10)
                            .add(lblFs, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(LayoutStyle.RELATED, 65, Short.MAX_VALUE)
                .add(jPanel1Layout.createParallelGroup(GroupLayout.LEADING)
                    .add(GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                        .add(lblFt, GroupLayout.PREFERRED_SIZE, 425, GroupLayout.PREFERRED_SIZE)
                        .add(44, 44, 44))
                    .add(GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(GroupLayout.TRAILING)
                            .add(jScrollPane11, GroupLayout.PREFERRED_SIZE, 438, GroupLayout.PREFERRED_SIZE)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(txtFt, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.RELATED)
                                .add(btnSetFt)))
                        .add(31, 31, 31))))
        );
        jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .add(jPanel1Layout.createParallelGroup(GroupLayout.BASELINE)
                    .add(txtFt, GroupLayout.PREFERRED_SIZE, 23, GroupLayout.PREFERRED_SIZE)
                    .add(btnSetFt)
                    .add(btnSetFs)
                    .add(txtFs, GroupLayout.PREFERRED_SIZE, 23, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(GroupLayout.BASELINE)
                    .add(lblFt, GroupLayout.PREFERRED_SIZE, 25, GroupLayout.PREFERRED_SIZE)
                    .add(lblFs, GroupLayout.PREFERRED_SIZE, 25, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(GroupLayout.LEADING)
                    .add(jScrollPane10, GroupLayout.PREFERRED_SIZE, 45, GroupLayout.PREFERRED_SIZE)
                    .add(jScrollPane11, GroupLayout.PREFERRED_SIZE, 33, GroupLayout.PREFERRED_SIZE))
                .add(23, 23, 23))
        );

        jPanel4.setBackground(new Color(102, 102, 255));
        jPanel4.setBorder(new LineBorder(new Color(0, 0, 0), 1, true));
        jPanel4.setMaximumSize(new Dimension(500, 32767));

        btnGetK.setFont(new Font("Times New Roman", 0, 14)); // NOI18N
        btnGetK.setText(bundle.getString("Main.btnGetK.text")); // NOI18N
        btnGetK.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnGetKActionPerformed(evt);
            }
        });

        tableW.setFont(new Font("Times New Roman", 0, 14)); // NOI18N
        tableW.setModel(new DefaultTableModel(
            new Object [][] {
                {"", null, null, null},
                {"", null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "W1", "W2", "W3"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableW.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        tableW.setPreferredSize(new Dimension(450, 320));
        tableW.setShowGrid(true);
        jScrollPane12.setViewportView(tableW);
        if (tableW.getColumnModel().getColumnCount() > 0) {
            tableW.getColumnModel().getColumn(0).setResizable(false);
            tableW.getColumnModel().getColumn(0).setHeaderValue(bundle.getString("Main.tableW.columnModel.title0_1")); // NOI18N
            tableW.getColumnModel().getColumn(1).setResizable(false);
            tableW.getColumnModel().getColumn(1).setHeaderValue(bundle.getString("Main.tableW.columnModel.title1_2")); // NOI18N
            tableW.getColumnModel().getColumn(2).setResizable(false);
            tableW.getColumnModel().getColumn(2).setHeaderValue(bundle.getString("Main.tableW.columnModel.title2_2")); // NOI18N
            tableW.getColumnModel().getColumn(3).setResizable(false);
            tableW.getColumnModel().getColumn(3).setHeaderValue(bundle.getString("Main.tableW.columnModel.title3_3")); // NOI18N
        }

        jLabel11.setFont(new Font("Times New Roman", 0, 14)); // NOI18N
        jLabel11.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel11.setText(bundle.getString("Main.jLabel11.text")); // NOI18N

        GroupLayout jPanel4Layout = new GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .add(26, 26, 26)
                .add(jPanel4Layout.createParallelGroup(GroupLayout.LEADING, false)
                    .add(jScrollPane12, GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                    .add(jLabel11, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(btnGetK, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(26, 26, 26))
        );
        jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(btnGetK, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.RELATED)
                .add(jLabel11, GroupLayout.PREFERRED_SIZE, 29, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.RELATED)
                .add(jScrollPane12, GroupLayout.PREFERRED_SIZE, 347, GroupLayout.PREFERRED_SIZE)
                .add(41, 41, 41))
        );

        jPanel5.setBackground(new Color(102, 102, 255));
        jPanel5.setBorder(new LineBorder(new Color(0, 0, 0), 1, true));
        jPanel5.setMaximumSize(new Dimension(500, 32767));
        jPanel5.setPreferredSize(new Dimension(500, 507));

        btnMP.setFont(new Font("Times New Roman", 0, 14)); // NOI18N
        btnMP.setText(bundle.getString("Main.btnMP.text")); // NOI18N
        btnMP.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnMPActionPerformed(evt);
            }
        });

        jLabel10.setFont(new Font("Times New Roman", 0, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel10.setText(bundle.getString("Main.jLabel10.text")); // NOI18N

        tableMP.setFont(new Font("Times New Roman", 0, 14)); // NOI18N
        tableMP.setModel(new DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "EP", "Vertice1", "Vertice2", "T"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableMP.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        tableMP.setPreferredSize(new Dimension(450, 320));
        tableMP.setShowGrid(true);
        jScrollPane9.setViewportView(tableMP);
        if (tableMP.getColumnModel().getColumnCount() > 0) {
            tableMP.getColumnModel().getColumn(0).setResizable(false);
            tableMP.getColumnModel().getColumn(0).setHeaderValue(bundle.getString("Main.tableMP.columnModel.title0")); // NOI18N
            tableMP.getColumnModel().getColumn(1).setResizable(false);
            tableMP.getColumnModel().getColumn(1).setHeaderValue(bundle.getString("Main.tableMP.columnModel.title1_4")); // NOI18N
            tableMP.getColumnModel().getColumn(2).setResizable(false);
            tableMP.getColumnModel().getColumn(2).setHeaderValue(bundle.getString("Main.tableMP.columnModel.title2_4")); // NOI18N
            tableMP.getColumnModel().getColumn(3).setResizable(false);
            tableMP.getColumnModel().getColumn(3).setHeaderValue(bundle.getString("Main.tableMP.columnModel.title3_5")); // NOI18N
        }

        GroupLayout jPanel5Layout = new GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .add(33, 33, 33)
                .add(jPanel5Layout.createParallelGroup(GroupLayout.LEADING, false)
                    .add(btnMP, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jLabel10, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jScrollPane9, GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE))
                .add(33, 33, 33))
        );
        jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .add(53, 53, 53)
                .add(btnMP)
                .addPreferredGap(LayoutStyle.RELATED)
                .add(jLabel10, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.RELATED)
                .add(jScrollPane9, GroupLayout.PREFERRED_SIZE, 347, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        GroupLayout panelMPLayout = new GroupLayout(panelMP);
        panelMP.setLayout(panelMPLayout);
        panelMPLayout.setHorizontalGroup(panelMPLayout.createParallelGroup(GroupLayout.LEADING)
            .add(panelMPLayout.createSequentialGroup()
                .add(5, 5, 5)
                .add(panelMPLayout.createParallelGroup(GroupLayout.TRAILING)
                    .add(jPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .add(panelMPLayout.createSequentialGroup()
                        .add(jPanel4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.UNRELATED)
                        .add(jPanel5, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                .add(12, 12, 12))
        );
        panelMPLayout.setVerticalGroup(panelMPLayout.createParallelGroup(GroupLayout.LEADING)
            .add(GroupLayout.TRAILING, panelMPLayout.createSequentialGroup()
                .add(32, 32, 32)
                .add(jPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.UNRELATED)
                .add(panelMPLayout.createParallelGroup(GroupLayout.LEADING, false)
                    .add(jPanel5, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .add(jPanel4, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(32, 32, 32))
        );

        jTabbedPane1.addTab(bundle.getString("Main.panelMP.TabConstraints.tabTitle"), panelMP); // NOI18N

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.LEADING)
            .add(jTabbedPane1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jTabbedPane1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .add(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonPokazActionPerformed(ActionEvent evt) {//GEN-FIRST:event_buttonPokazActionPerformed
        int n = (int) spinnerN.getValue();
        lu.createMatrixA(tableA, n);
        tableA.setModel(lu.getModelA());
    }//GEN-LAST:event_buttonPokazActionPerformed

    private void buttonObliczActionPerformed(ActionEvent evt) {//GEN-FIRST:event_buttonObliczActionPerformed

        int n = (int) spinnerN.getValue();
        lu.makeDecomposition(tableL, tableU, n, czas);

        //przypisanie nowego modelu dla tabeli L
        tableL.setModel(lu.getModelL());

        //przypisanie nowego modelu dla tabeli U
        tableU.setModel(lu.getModelU());

    }//GEN-LAST:event_buttonObliczActionPerformed

    private void buttonVerificationActionPerformed(ActionEvent evt) {//GEN-FIRST:event_buttonVerificationActionPerformed
        int n = (int) spinnerN.getValue();
        lu.verify(n, tableABis, tableA1, tableA2, labelSumEl);

        //przypisanie nowego modelu dla tabeli A1
        tableA1.setModel(lu.getModelA1());

        //przypisanie nowego modelu dla tabeli ABis
        tableABis.setModel(lu.getModelA());

        //przypisanie nowego modelu dla tabeli A2
        tableA2.setModel(lu.getModelA2());

    }//GEN-LAST:event_buttonVerificationActionPerformed

    private void btnNestsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNestsActionPerformed
        int n = (int) spinnerN.getValue();
        graf.Coordinates(n, tableFirstNest);
        graf.sort(tableFirstNest);
        tableFirstNest.setModel(graf.getModelA1());
    }//GEN-LAST:event_btnNestsActionPerformed

    private void btnListConnectionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListConnectionsActionPerformed
        int n = (int) spinnerN.getValue();
        graf.Connections(tableFirstNest, tableOfConnections);
        tableOfConnections.setModel(graf.getModelC());
    }//GEN-LAST:event_btnListConnectionsActionPerformed

    private void btnMPActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnMPActionPerformed
        mp.setK(tableW,mp.getK());
        mp.setFsK();
        mp.setFtK();
        mp.setEP();
        mp.printEP(mp.getEp(), tableMP); 
    }//GEN-LAST:event_btnMPActionPerformed

    private void btnSetFsActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnSetFsActionPerformed
        mp.initFs(mp.getFs(), txtFs);
        boolean condition = mp.isFsGood(mp.getFs(), mp.getD());
        if (condition) {
            lblFs.setText("Fs spełniająca warunek lokalnośći połączeń");
        } else {
            lblFs.setText("Fs niespełniająca warunek lokalnośći połączeń");
        }
        mp.printFs(mp.getFs(), tableFs);
    }//GEN-LAST:event_btnSetFsActionPerformed

    private void txtFsMouseClicked(MouseEvent evt) {//GEN-FIRST:event_txtFsMouseClicked
        txtFs.setText("");
    }//GEN-LAST:event_txtFsMouseClicked

    private void txtFtMouseClicked(MouseEvent evt) {//GEN-FIRST:event_txtFtMouseClicked
        txtFt.setText("");
    }//GEN-LAST:event_txtFtMouseClicked

    private void btnSetFtActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnSetFtActionPerformed
        mp.initFt(mp.getFt(), txtFt);
        boolean condition = mp.isFtGood(mp.getFt(), mp.getD());
        if (condition) {
            lblFt.setText("Ft spełniająca warunek przyczynowości połączeń");
        } else {
            lblFs.setText("Ft niespełniająca warunek przyczynowości połączeń");
        }
        mp.printFt(mp.getFt(), tableFt);
    }//GEN-LAST:event_btnSetFtActionPerformed

    private void btnGetKActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnGetKActionPerformed
        //DefaultTableModel model = (DefaultTableModel) tableFirstNest.getModel();
        for (int i = 0; i < tableFirstNest.getRowCount(); i++) {
            for (int j = 1; j < 4; j++) {
                tableW.setValueAt(i + 1, i, 0);
                tableW.setValueAt(tableFirstNest.getValueAt(i, j), i, j);
            }
        }
    }//GEN-LAST:event_btnGetKActionPerformed

    private void txtFtActionPerformed(ActionEvent evt) {//GEN-FIRST:event_txtFtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFtActionPerformed

    public JTable getTableA1() {
        return tableA1;
    }

    public JTable getTableA2() {
        return tableA2;
    }

    public JTable getTableABis() {
        return tableABis;
    }

    public JTable getTableU() {
        return tableU;
    }

    public JTable getTableL() {
        return tableL;
    }

    public static JTable getTableFirstNest() {
        return tableFirstNest;
    }

    public JTable getTableOfConnections() {
        return tableOfConnections;
    }

    public JLabel getLabelSumEl() {
        return labelSumEl;
    }

    public JSpinner getSpinnerN() {
        return spinnerN;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Main().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton btnGetK;
    private JButton btnListConnections;
    private JButton btnMP;
    private JButton btnNests;
    private JButton btnSetFs;
    private JButton btnSetFt;
    private JButton buttonOblicz;
    private JButton buttonPokaz;
    private JButton buttonVerification;
    private JLabel czas;
    private JLabel jLabel1;
    private JLabel jLabel10;
    private JLabel jLabel11;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JLabel jLabel4;
    private JLabel jLabel5;
    private JLabel jLabel6;
    private JLabel jLabel7;
    private JLabel jLabel8;
    private JLabel jLabel9;
    private JPanel jPanel1;
    private JPanel jPanel3;
    private JPanel jPanel4;
    private JPanel jPanel5;
    private JPanel jPanel6;
    private JScrollPane jScrollPane1;
    private JScrollPane jScrollPane10;
    private JScrollPane jScrollPane11;
    private JScrollPane jScrollPane12;
    private JScrollPane jScrollPane2;
    private JScrollPane jScrollPane3;
    private JScrollPane jScrollPane4;
    private JScrollPane jScrollPane5;
    private JScrollPane jScrollPane6;
    private JScrollPane jScrollPane7;
    private JScrollPane jScrollPane8;
    private JScrollPane jScrollPane9;
    private JTabbedPane jTabbedPane1;
    private JLabel labelSumEl;
    private JLabel lblFs;
    private JLabel lblFt;
    private JPanel panelA;
    private JPanel panelA1;
    private JPanel panelA2;
    private JPanel panelGraf;
    private JPanel panelMP;
    private JPanel panelMacierz;
    private JPanel panelParametry;
    private JPanel panelTabelaA;
    private JPanel panelTabelaL;
    private JPanel panelTabelaU;
    private JPanel panelTabelePomocnicze;
    private JPanel panelWejsciowe;
    private JPanel panellWeyfikacja;
    private JSpinner spinnerN;
    private JTable tableA;
    private JTable tableA1;
    private JTable tableA2;
    private JTable tableABis;
    private static JTable tableFirstNest;
    private JTable tableFs;
    private JTable tableFt;
    private JTable tableL;
    private JTable tableMP;
    private JTable tableOfConnections;
    private JTable tableU;
    private JTable tableW;
    private JTextField txtFs;
    private JTextField txtFt;
    // End of variables declaration//GEN-END:variables
}
